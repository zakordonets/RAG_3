{
  "html": "Title: Что может сделать чат-бот с помощью edna API | edna Chat Center\n\nURL Source: http://docs-chatcenter.edna.ru/docs/chat-bot/bot-features\n\nMarkdown Content:\nОбновлено:\n\n27 июля 2022\n\nПосле инициализации чата чат-бот может первым отправить приветствие и вовлечь клиента в диалог, не дожидаясь его сообщения. За это отвечает метод `Greet`.\n\n*   `text` — текст сообщения чат-бота.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n\nПосле назначения чата на чат-бота, чат-бот может отвечать на сообщения клиента. За это отвечает метод **Post answers**.\n\n*   `text` — текст ответа чат-бота на сообщение клиента.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `answerId` — ID ответа чат-бота.\n*   `formattedText` — текст ответа чат-бота, который может содержать markdown-разметку для корректного отображения форматированного ответа в интерфейсах клиента и агента.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `sessionId` — ID треда в edna Chat Center.\n*   `questionId` — ID сообщения в БД edna Chat Center.\n*   `questionIndex` — номер сообщения в треде.\n*   `segmentationInfo` — объект, содержащий дополнительную информацию для маршрутизации треда (кастомный параметр сегментации) после чат-бота:\n    *   `key` — имя параметра сегментации.\n    *   `value` — значение параметра сегментации.\n\n*   `attachments` — массив с объектами вложений.\n    *   `attachments.url` — ссылка на вложение.\n    *   `attachments.name` — имя файла вложения.\n    *   `attachments.type` — тип файла вложения.\n\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `code` — используется для перевода треда на агента. Для перевода необходимо передать `UNCLEAR_QUESTION` или `SWITCH_TO_HUMAN`.\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n*   `settings.masked` — параметр, отвечающий за маскирование цифр в связанном сообщении клиента (`true`/`false`).\n\nЧат-бот может самостоятельно завершить тред, не переводя его на агента. Для этого чат-бот может воспользоваться методами **Close Threads by Bot** или **Close Threads by Bot with Comment**.\n\nЧат-бот может работать в режиме суфлера. Например, тред обрабатывается агентом, чат-бот с помощью метода **Hints** может присылать подсказки для агента, подходящие для ответа клиенту. Данные подсказки будут отображаться у агента в разделе **Готовые ответы** → **Подсказки**.\n",
  "text": "Title: Что может сделать чат-бот с помощью edna API | edna Chat Center\n\nURL Source: http://docs-chatcenter.edna.ru/docs/chat-bot/bot-features\n\nMarkdown Content:\nОбновлено:\n\n27 июля 2022\n\nПосле инициализации чата чат-бот может первым отправить приветствие и вовлечь клиента в диалог, не дожидаясь его сообщения. За это отвечает метод `Greet`.\n\n*   `text` — текст сообщения чат-бота.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n\nПосле назначения чата на чат-бота, чат-бот может отвечать на сообщения клиента. За это отвечает метод **Post answers**.\n\n*   `text` — текст ответа чат-бота на сообщение клиента.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `answerId` — ID ответа чат-бота.\n*   `formattedText` — текст ответа чат-бота, который может содержать markdown-разметку для корректного отображения форматированного ответа в интерфейсах клиента и агента.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `sessionId` — ID треда в edna Chat Center.\n*   `questionId` — ID сообщения в БД edna Chat Center.\n*   `questionIndex` — номер сообщения в треде.\n*   `segmentationInfo` — объект, содержащий дополнительную информацию для маршрутизации треда (кастомный параметр сегментации) после чат-бота:\n    *   `key` — имя параметра сегментации.\n    *   `value` — значение параметра сегментации.\n\n*   `attachments` — массив с объектами вложений.\n    *   `attachments.url` — ссылка на вложение.\n    *   `attachments.name` — имя файла вложения.\n    *   `attachments.type` — тип файла вложения.\n\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `code` — используется для перевода треда на агента. Для перевода необходимо передать `UNCLEAR_QUESTION` или `SWITCH_TO_HUMAN`.\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n*   `settings.masked` — параметр, отвечающий за маскирование цифр в связанном сообщении клиента (`true`/`false`).\n\nЧат-бот может самостоятельно завершить тред, не переводя его на агента. Для этого чат-бот может воспользоваться методами **Close Threads by Bot** или **Close Threads by Bot with Comment**.\n\nЧат-бот может работать в режиме суфлера. Например, тред обрабатывается агентом, чат-бот с помощью метода **Hints** может присылать подсказки для агента, подходящие для ответа клиенту. Данные подсказки будут отображаться у агента в разделе **Готовые ответы** → **Подсказки**.\n",
  "metadata": {
    "url": "https://docs-chatcenter.edna.ru/docs/chat-bot/bot-features",
    "content_hash": "1404e12357ea61fabe8ba91a985b7a569c7a00c58367660919ee373e8effb8cb",
    "last_modified": "2025-09-19T09:28:18.368373+00:00",
    "etag": null,
    "title": null,
    "page_type": "guide",
    "content_length": 4036,
    "cached_at": "2025-09-19T09:28:18.368373+00:00",
    "html": "Title: Что может сделать чат-бот с помощью edna API | edna Chat Center\n\nURL Source: http://docs-chatcenter.edna.ru/docs/chat-bot/bot-features\n\nMarkdown Content:\nОбновлено:\n\n27 июля 2022\n\nПосле инициализации чата чат-бот может первым отправить приветствие и вовлечь клиента в диалог, не дожидаясь его сообщения. За это отвечает метод `Greet`.\n\n*   `text` — текст сообщения чат-бота.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n\nПосле назначения чата на чат-бота, чат-бот может отвечать на сообщения клиента. За это отвечает метод **Post answers**.\n\n*   `text` — текст ответа чат-бота на сообщение клиента.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `answerId` — ID ответа чат-бота.\n*   `formattedText` — текст ответа чат-бота, который может содержать markdown-разметку для корректного отображения форматированного ответа в интерфейсах клиента и агента.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `sessionId` — ID треда в edna Chat Center.\n*   `questionId` — ID сообщения в БД edna Chat Center.\n*   `questionIndex` — номер сообщения в треде.\n*   `segmentationInfo` — объект, содержащий дополнительную информацию для маршрутизации треда (кастомный параметр сегментации) после чат-бота:\n    *   `key` — имя параметра сегментации.\n    *   `value` — значение параметра сегментации.\n\n*   `attachments` — массив с объектами вложений.\n    *   `attachments.url` — ссылка на вложение.\n    *   `attachments.name` — имя файла вложения.\n    *   `attachments.type` — тип файла вложения.\n\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `code` — используется для перевода треда на агента. Для перевода необходимо передать `UNCLEAR_QUESTION` или `SWITCH_TO_HUMAN`.\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n*   `settings.masked` — параметр, отвечающий за маскирование цифр в связанном сообщении клиента (`true`/`false`).\n\nЧат-бот может самостоятельно завершить тред, не переводя его на агента. Для этого чат-бот может воспользоваться методами **Close Threads by Bot** или **Close Threads by Bot with Comment**.\n\nЧат-бот может работать в режиме суфлера. Например, тред обрабатывается агентом, чат-бот с помощью метода **Hints** может присылать подсказки для агента, подходящие для ответа клиенту. Данные подсказки будут отображаться у агента в разделе **Готовые ответы** → **Подсказки**.\n",
    "text": "Title: Что может сделать чат-бот с помощью edna API | edna Chat Center\n\nURL Source: http://docs-chatcenter.edna.ru/docs/chat-bot/bot-features\n\nMarkdown Content:\nОбновлено:\n\n27 июля 2022\n\nПосле инициализации чата чат-бот может первым отправить приветствие и вовлечь клиента в диалог, не дожидаясь его сообщения. За это отвечает метод `Greet`.\n\n*   `text` — текст сообщения чат-бота.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n\nПосле назначения чата на чат-бота, чат-бот может отвечать на сообщения клиента. За это отвечает метод **Post answers**.\n\n*   `text` — текст ответа чат-бота на сообщение клиента.\n*   `receivedAt` — время, когда было получено сообщение.\n*   `answerId` — ID ответа чат-бота.\n*   `formattedText` — текст ответа чат-бота, который может содержать markdown-разметку для корректного отображения форматированного ответа в интерфейсах клиента и агента.\n*   `clientId` — ID клиента во внешней системе (для авторизованных клиентов).\n*   `threadsClientId` — внутренний ID клиента в edna Chat Center.\n*   `sessionId` — ID треда в edna Chat Center.\n*   `questionId` — ID сообщения в БД edna Chat Center.\n*   `questionIndex` — номер сообщения в треде.\n*   `segmentationInfo` — объект, содержащий дополнительную информацию для маршрутизации треда (кастомный параметр сегментации) после чат-бота:\n    *   `key` — имя параметра сегментации.\n    *   `value` — значение параметра сегментации.\n\n*   `attachments` — массив с объектами вложений.\n    *   `attachments.url` — ссылка на вложение.\n    *   `attachments.name` — имя файла вложения.\n    *   `attachments.type` — тип файла вложения.\n\n*   `quickReplies` — массив объектов с быстрыми ответами.\n    *   `quickReplies.type` — в данный момент поддерживается только `TEXT`.\n    *   `quickReplies.text` — текст ответа.\n    *   `quickReplies.shown_text` — необязательный параметр, текст, который будет показан клиенту в случае нажатия на кнопку быстрого ответа (вместо `quickReplies.text`).\n    *   `quickReplies.callback_data` — функция, которую виджет чата передаст в API в случае нажатия на кнопку. При наличии этого атрибута будет вызван метод JS SDK API ThreadsWidget.on.\n    *   `quickReplies.imageUrl` — ссылка иконки для кнопки.\n    *   `quickReplies.url` — ссылка на файл в кнопке.\n\n*   `code` — используется для перевода треда на агента. Для перевода необходимо передать `UNCLEAR_QUESTION` или `SWITCH_TO_HUMAN`.\n*   `settings.blockInput` — параметр, отвечающий за блокировку поля ввода сообщения (`true`/`false`) при использовании быстрых ответов.\n*   `settings.masked` — параметр, отвечающий за маскирование цифр в связанном сообщении клиента (`true`/`false`).\n\nЧат-бот может самостоятельно завершить тред, не переводя его на агента. Для этого чат-бот может воспользоваться методами **Close Threads by Bot** или **Close Threads by Bot with Comment**.\n\nЧат-бот может работать в режиме суфлера. Например, тред обрабатывается агентом, чат-бот с помощью метода **Hints** может присылать подсказки для агента, подходящие для ответа клиенту. Данные подсказки будут отображаться у агента в разделе **Готовые ответы** → **Подсказки**.\n"
  }
}