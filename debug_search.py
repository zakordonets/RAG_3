#!/usr/bin/env python3
"""
Debug script to analyze search quality
"""
from app.services.bge_embeddings import embed_unified
from app.services.retrieval import hybrid_search
from app.services.rerank import rerank

def debug_search():
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É
    query = '–ö–∞–∫–∏–µ –∫–∞–Ω–∞–ª—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ —á–∞—Ç-—Ü–µ–Ω—Ç—Ä–µ?'
    print(f'üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "{query}"')

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏
    embeddings = embed_unified(query, return_dense=True, return_sparse=True)
    print(f'üìä Dense embedding: {len(embeddings["dense_vecs"][0])} dims')
    print(f'üìä Sparse embedding: {len(embeddings["sparse_vecs"][0])} tokens')

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
    results = hybrid_search(
        query_dense=embeddings['dense_vecs'][0],
        query_sparse=embeddings['sparse_vecs'][0],
        k=20
    )

    print(f'\nüìã –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:')
    for i, result in enumerate(results[:10], 1):
        payload = result.get('payload', {})
        title = payload.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        url = payload.get('url', '–ë–µ–∑ URL')
        score = result.get('boosted_score', 0.0)
        print(f'{i:2d}. {title[:60]:<60} | {score:.4f}')
        print(f'    {url[:80]}')
        print()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è —Å—Ç–∞—Ç—å—è
    relevant_found = False
    for result in results:
        url = result.get('payload', {}).get('url', '')
        if 'whatis' in url:
            relevant_found = True
            print(f'‚úÖ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è —Å—Ç–∞—Ç—å—è –Ω–∞–π–¥–µ–Ω–∞: {url}')
            print(f'   –ü–æ–∑–∏—Ü–∏—è: {results.index(result) + 1}')
            print(f'   –°—á–µ—Ç: {result.get("boosted_score", 0.0):.4f}')
            break

    if not relevant_found:
        print('‚ùå –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è —Å—Ç–∞—Ç—å—è –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–æ–ø-20')

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ—Ä–∞–Ω–∫–∏–Ω–≥
    print('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ—Ä–∞–Ω–∫–∏–Ω–≥...')
    reranked = rerank(query, results[:10], top_n=5)

    print(f'\nüìã –ü–æ—Å–ª–µ —Ä–µ—Ä–∞–Ω–∫–∏–Ω–≥–∞ (—Ç–æ–ø-5):')
    for i, result in enumerate(reranked, 1):
        payload = result.get('payload', {})
        title = payload.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        url = payload.get('url', '–ë–µ–∑ URL')
        score = result.get('score', 0.0)
        print(f'{i:2d}. {title[:60]:<60} | {score:.4f}')
        print(f'    {url[:80]}')
        print()

if __name__ == "__main__":
    debug_search()
