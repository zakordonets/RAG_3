#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç RAGAS evaluator
"""

import asyncio
import os
from app.services.ragas_evaluator import ragas_evaluator

async def test_ragas_direct():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç RAGAS evaluator"""

    print("üß™ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç RAGAS evaluator")
    print("=" * 50)

    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    query = "–ö–∞–∫–∏–µ –∫–∞–Ω–∞–ª—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ edna Chat Center?"
    response = "–í edna Chat Center –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã: Telegram, WhatsApp, Viber, SMS, –≤–µ–±-–≤–∏–¥–∂–µ—Ç."
    contexts = [
        "edna Chat Center –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ —Å–≤—è–∑–∏ –≤–∫–ª—é—á–∞—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã –∏ SMS",
        "–°–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å Telegram, WhatsApp, Viber —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
        "–í–µ–±-–≤–∏–¥–∂–µ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç –Ω–∞ —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏"
    ]
    sources = ["https://docs-chatcenter.edna.ru/channels"]

    print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
    print(f"üí¨ –û—Ç–≤–µ—Ç: {response}")
    print(f"üìö –ö–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤: {len(contexts)}")

    try:
        print("\nüîÑ –ó–∞–ø—É—Å–∫–∞–µ–º RAGAS –æ—Ü–µ–Ω–∫—É...")
        start_time = asyncio.get_event_loop().time()

        scores = await ragas_evaluator.evaluate_interaction(
            query=query,
            response=response,
            contexts=contexts,
            sources=sources
        )

        end_time = asyncio.get_event_loop().time()
        evaluation_time = end_time - start_time

        print(f"‚úÖ RAGAS –æ—Ü–µ–Ω–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ {evaluation_time:.2f} —Å–µ–∫—É–Ω–¥")
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"  üéØ Faithfulness: {scores.get('faithfulness', 'N/A')}")
        print(f"  üìã Context Precision: {scores.get('context_precision', 'N/A')}")
        print(f"  üîó Answer Relevancy: {scores.get('answer_relevancy', 'N/A')}")
        print(f"  üìà Overall Score: {scores.get('overall_score', 'N/A')}")

        if evaluation_time < 10:
            print("üéØ –û—Ç–ª–∏—á–Ω–æ: –ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞!")
        elif evaluation_time < 20:
            print("‚úÖ –•–æ—Ä–æ—à–æ: –ü—Ä–∏–µ–º–ª–µ–º–æ–µ –≤—Ä–µ–º—è")
        else:
            print("‚ö†Ô∏è  –ú–µ–¥–ª–µ–Ω–Ω–æ: –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ RAGAS: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_ragas_direct())
