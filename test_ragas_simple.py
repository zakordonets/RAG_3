#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç RAGAS —Å –∫–æ—Ä–æ—Ç–∫–∏–º timeout
"""

import asyncio
import os
from app.services.ragas_evaluator import ragas_evaluator

async def test_ragas_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç RAGAS"""

    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç RAGAS (60 —Å–µ–∫ timeout)")
    print("=" * 50)

    # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    query = "–ß—Ç–æ —Ç–∞–∫–æ–µ edna Chat Center?"
    response = "edna Chat Center - —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Å–≤—è–∑–∏."
    contexts = [
        "edna Chat Center - —ç—Ç–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏",
        "–°–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ —Å–≤—è–∑–∏ –≤ –µ–¥–∏–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"
    ]
    sources = ["https://docs-chatcenter.edna.ru/overview"]

    print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
    print(f"üí¨ –û—Ç–≤–µ—Ç: {response}")
    print(f"üìö –ö–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤: {len(contexts)}")

    try:
        print("\nüîÑ –ó–∞–ø—É—Å–∫–∞–µ–º RAGAS –æ—Ü–µ–Ω–∫—É (60 —Å–µ–∫ timeout)...")
        start_time = asyncio.get_event_loop().time()

        scores = await ragas_evaluator.evaluate_interaction(
            query=query,
            response=response,
            contexts=contexts,
            sources=sources
        )

        end_time = asyncio.get_event_loop().time()
        evaluation_time = end_time - start_time

        print(f"‚úÖ RAGAS –æ—Ü–µ–Ω–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ {evaluation_time:.2f} —Å–µ–∫—É–Ω–¥")
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"  üéØ Faithfulness: {scores.get('faithfulness', 'N/A')}")
        print(f"  üìã Context Precision: {scores.get('context_precision', 'N/A')}")
        print(f"  üîó Answer Relevancy: {scores.get('answer_relevancy', 'N/A')}")
        print(f"  üìà Overall Score: {scores.get('overall_score', 'N/A')}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ —ç—Ç–æ fallback –∑–Ω–∞—á–µ–Ω–∏—è
        if scores.get('faithfulness') == 0.8999999999999999:
            print("\n‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã fallback –∑–Ω–∞—á–µ–Ω–∏—è")
        else:
            print("\nüéØ –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ RAGAS –∑–Ω–∞—á–µ–Ω–∏—è!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ RAGAS: {e}")

if __name__ == "__main__":
    asyncio.run(test_ragas_simple())
