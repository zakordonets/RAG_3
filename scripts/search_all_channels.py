#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ –≤—Å–µ—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ —Å–≤—è–∑–∏
"""

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

from app.services.retrieval import client, COLLECTION
from qdrant_client.models import Filter, FieldCondition, MatchValue

def search_all_channels():
    """–ù–∞–π—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    print("üîç –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ —Å–≤—è–∑–∏")
    print("=" * 70)

    # –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
    channels = [
        'telegram', 'whatsapp', 'viber', '–∞–≤–∏—Ç–æ', 'avito',
        'facebook', 'instagram', 'vk', '–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ',
        'email', 'sms', '–∑–≤–æ–Ω–æ–∫', 'call',
        '–≤–µ–±-–≤–∏–¥–∂–µ—Ç', '–º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', '–º–æ–±–∏–ª—å–Ω—ã–π'
    ]

    found_channels = {}

    for channel in channels:
        try:
            print(f"\nüîé –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å '{channel}'...")

            results = client.scroll(
                collection_name=COLLECTION,
                scroll_filter=Filter(
                    must=[
                        FieldCondition(
                            key="text",
                            match=MatchValue(value=channel)
                        )
                    ]
                ),
                limit=20,
                with_payload=True,
                with_vectors=False
            )

            if results[0]:
                found_channels[channel] = len(results[0])
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results[0])} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –¥–æ–∫—É–º–µ–Ω—Ç–∞
                for i, point in enumerate(results[0][:3]):
                    payload = point.payload
                    title = payload.get('title', 'N/A')
                    url = payload.get('url', 'N/A')
                    indexed_via = payload.get('indexed_via', 'unknown')

                    print(f"      {i+1}. {title}")
                    print(f"         URL: {url}")
                    print(f"         indexed_via: {indexed_via}")
            else:
                found_channels[channel] = 0
                print(f"   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ")

        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
            found_channels[channel] = -1

    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print()

    for channel, count in found_channels.items():
        if count > 0:
            print(f"   ‚úÖ {channel}: {count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        elif count == 0:
            print(f"   ‚ùå {channel}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è  {channel}: –æ—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞")

    # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    print(f"\nüìÑ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:")
    all_results = client.scroll(
        collection_name=COLLECTION,
        limit=1000,
        with_payload=True,
        with_vectors=False
    )

    total_docs = len(all_results[0])
    jina_docs = sum(1 for point in all_results[0] if point.payload.get('indexed_via') == 'jina')
    unknown_docs = sum(1 for point in all_results[0] if point.payload.get('indexed_via') == 'unknown')

    print(f"   –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {total_docs}")
    print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å Jina Reader: {jina_docs}")
    print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å indexed_via: unknown: {unknown_docs}")

    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –¥–ª–∏–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    long_docs = sum(1 for point in all_results[0] if point.payload.get('content_length', 0) > 5000)
    print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –¥–ª–∏–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º (>5000 —Å–∏–º–≤–æ–ª–æ–≤): {long_docs}")

if __name__ == "__main__":
    search_all_channels()
