#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç Jina Reader
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é app
sys.path.append(str(Path(__file__).parent.parent))

from ingestion.crawler import _jina_reader_fetch
from ingestion.parsers import parse_api_documentation, parse_release_notes, parse_faq_content, parse_guides
from ingestion.chunker import chunk_text


def test_jina_direct():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Jina Reader –Ω–∞–ø—Ä—è–º—É—é"""
    test_urls = [
        "https://docs-chatcenter.edna.ru/docs/start/whatis",
        "https://docs-chatcenter.edna.ru/docs/admin/widget/admin-widget-features",
        "https://docs-chatcenter.edna.ru/docs/sdk/sdk-mobilechat"
    ]

    for url in test_urls:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {url}")
        print("="*60)

        try:
            # 1. –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ Jina Reader
            print("1Ô∏è‚É£ Jina Reader:")
            jina_content = _jina_reader_fetch(url, timeout=30)
            print(f"   –î–ª–∏–Ω–∞: {len(jina_content) if jina_content else 0}")
            print(f"   –ü—Ä–µ–≤—å—é: {jina_content[:200] + '...' if jina_content and len(jina_content) > 200 else jina_content}")

            if not jina_content:
                print("   ‚ùå Jina Reader –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç!")
                continue

            # 2. –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            print("\n2Ô∏è‚É£ –ü–∞—Ä—Å–∏–Ω–≥:")
            parsed_content = parse_api_documentation(jina_content)
            if not parsed_content:
                parsed_content = parse_guides(jina_content)
            if not parsed_content:
                parsed_content = parse_faq_content(jina_content)
            if not parsed_content:
                parsed_content = parse_release_notes(jina_content)

            if parsed_content:
                print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {parsed_content.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"   –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(parsed_content.get('content', ''))}")
                print(f"   –ü—Ä–µ–≤—å—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {parsed_content.get('content', '')[:200] + '...' if len(parsed_content.get('content', '')) > 200 else parsed_content.get('content', '')}")
            else:
                print("   ‚ùå –ü–∞—Ä—Å–∏–Ω–≥ –Ω–µ —É–¥–∞–ª—Å—è!")
                continue

            # 3. –ß–∞–Ω–∫–∏–Ω–≥
            print("\n3Ô∏è‚É£ –ß–∞–Ω–∫–∏–Ω–≥:")
            content = parsed_content.get('content', '')
            if content:
                chunks = chunk_text(content)
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–Ω–∫–æ–≤: {len(chunks)}")
                if chunks:
                    print(f"   –ü–µ—Ä–≤—ã–π —á–∞–Ω–∫: {chunks[0][:100] + '...' if len(chunks[0]) > 100 else chunks[0]}")
            else:
                print("   ‚ùå –ù–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —á–∞–Ω–∫–∏–Ω–≥–∞!")

        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()


if __name__ == "__main__":
    test_jina_direct()
