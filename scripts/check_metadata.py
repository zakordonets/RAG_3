#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é app
sys.path.append(str(Path(__file__).parent.parent))

from app.services.retrieval import client, COLLECTION


def check_metadata():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        results = client.scroll(
            collection_name=COLLECTION,
            limit=5,
            with_payload=True
        )

        docs = results[0]
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ {len(docs)} –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö:")
        print("="*60)

        for i, doc in enumerate(docs, 1):
            payload = doc.payload
            print(f"\nüìÑ –î–æ–∫—É–º–µ–Ω—Ç {i} (ID: {doc.id}):")
            print(f"   URL: {payload.get('url', '–ù–ï–¢')}")
            print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {payload.get('title', '–ù–ï–¢')}")
            print(f"   –¢–∏–ø —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {payload.get('page_type', '–ù–ï–¢')}")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {payload.get('source', '–ù–ï–¢')}")
            print(f"   –Ø–∑—ã–∫: {payload.get('language', '–ù–ï–¢')}")
            print(f"   –•—ç—à: {payload.get('hash', '–ù–ï–¢')}")
            print(f"   –ú–µ—Ç–æ–¥ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: {payload.get('indexed_via', '–ù–ï–¢')}")
            print(f"   –î–∞—Ç–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: {payload.get('indexed_at', '–ù–ï–¢')}")
            print(f"   –í–µ—Ä—Å–∏—è –ø–∞—Ä—Å–µ—Ä–∞: {payload.get('parser_version', '–ù–ï–¢')}")
            print(f"   –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(payload.get('text', ''))}")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏
            all_keys = list(payload.keys())
            print(f"   –í—Å–µ –∫–ª—é—á–∏: {all_keys}")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:")

        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
        metadata_stats = {}
        for doc in docs:
            for key, value in doc.payload.items():
                if key not in metadata_stats:
                    metadata_stats[key] = set()
                metadata_stats[key].add(str(value))

        for key, values in metadata_stats.items():
            print(f"   {key}: {len(values)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π")
            if len(values) <= 5:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –∏—Ö –Ω–µ–º–Ω–æ–≥–æ
                print(f"      {list(values)}")
            else:
                print(f"      {list(values)[:3]}... (–∏ –µ—â–µ {len(values)-3})")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    check_metadata()
