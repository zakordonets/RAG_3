"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ 409 (Conflict) –≤ Telegram Bot API.

–û—à–∏–±–∫–∞ 409 –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∫–æ–≥–¥–∞:
1. –ù–µ—Å–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç long polling –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
2. –£ –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω webhook, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å polling
3. –ü—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
- –£–¥–∞–ª—è–µ—Ç webhook (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
- –û—á–∏—â–∞–µ—Ç pending updates
- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
"""

from __future__ import annotations

import sys
from pathlib import Path

# Add project root to Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

import requests
from loguru import logger
from app.config import CONFIG


BOT_TOKEN = CONFIG.telegram_bot_token
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"


def get_webhook_info() -> dict:
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook."""
    try:
        response = requests.get(f"{API_URL}/getWebhookInfo", timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get("ok"):
                return data.get("result", {})
        logger.error(f"Failed to get webhook info: {response.status_code}")
        return {}
    except Exception as e:
        logger.error(f"Error getting webhook info: {e}")
        return {}


def delete_webhook() -> bool:
    """–£–¥–∞–ª–∏—Ç—å webhook –µ—Å–ª–∏ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."""
    try:
        # –£–¥–∞–ª—è–µ–º webhook –∏ –≤–∫–ª—é—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä drop_pending_updates
        response = requests.post(
            f"{API_URL}/deleteWebhook",
            json={"drop_pending_updates": True},
            timeout=10
        )
        if response.status_code == 200:
            data = response.json()
            if data.get("ok"):
                logger.info("‚úÖ Webhook successfully deleted")
                return True
        logger.error(f"Failed to delete webhook: {response.status_code} - {response.text}")
        return False
    except Exception as e:
        logger.error(f"Error deleting webhook: {e}")
        return False


def get_me() -> dict:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞."""
    try:
        response = requests.get(f"{API_URL}/getMe", timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get("ok"):
                return data.get("result", {})
        logger.error(f"Failed to get bot info: {response.status_code}")
        return {}
    except Exception as e:
        logger.error(f"Error getting bot info: {e}")
        return {}


def test_get_updates() -> bool:
    """–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏."""
    try:
        response = requests.get(
            f"{API_URL}/getUpdates",
            params={"timeout": 1, "limit": 1},
            timeout=5
        )
        if response.status_code == 200:
            data = response.json()
            if data.get("ok"):
                logger.info("‚úÖ getUpdates —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                return True
        elif response.status_code == 409:
            logger.error("‚ùå –û—à–∏–±–∫–∞ 409: Conflict - –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –≤—Å—ë –µ—â—ë –∞–∫—Ç–∏–≤–µ–Ω")
            return False

        logger.error(f"Failed to get updates: {response.status_code} - {response.text}")
        return False
    except Exception as e:
        logger.error(f"Error testing getUpdates: {e}")
        return False


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
    logger.info("=" * 60)
    logger.info("üîß Telegram Bot 409 Conflict Fix Tool")
    logger.info("=" * 60)

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    logger.info("\nüìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞...")
    bot_info = get_me()
    if bot_info:
        logger.info(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info.get('username', 'unknown')}")
        logger.info(f"   ID: {bot_info.get('id', 'unknown')}")
        logger.info(f"   –ò–º—è: {bot_info.get('first_name', 'unknown')}")
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω!")
        sys.exit(1)

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    logger.info("\nüìã –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    webhook_info = get_webhook_info()
    if webhook_info:
        webhook_url = webhook_info.get("url", "")
        pending_count = webhook_info.get("pending_update_count", 0)

        if webhook_url:
            logger.warning(f"‚ö†Ô∏è  Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
            logger.info(f"   Pending updates: {pending_count}")
            logger.info("\nüîÑ –£–¥–∞–ª–µ–Ω–∏–µ webhook...")
            if delete_webhook():
                logger.info("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω")
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook")
                sys.exit(1)
        else:
            logger.info("‚úÖ Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            if pending_count > 0:
                logger.info(f"‚ö†Ô∏è  Pending updates: {pending_count}")
                logger.info("üîÑ –û—á–∏—Å—Ç–∫–∞ pending updates —á–µ—Ä–µ–∑ deleteWebhook...")
                delete_webhook()  # –≠—Ç–æ –æ—á–∏—Å—Ç–∏—Ç pending updates

    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º getUpdates
    logger.info("\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ getUpdates...")
    if test_get_updates():
        logger.info("\n" + "=" * 60)
        logger.info("‚úÖ –í—Å—ë –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞.")
        logger.info("=" * 60)
        sys.exit(0)
    else:
        logger.error("\n" + "=" * 60)
        logger.error("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞!")
        logger.error("")
        logger.error("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        logger.error("1. –î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –≤—Å—ë –µ—â—ë –∑–∞–ø—É—â–µ–Ω")
        logger.error("2. –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ Docker/Kubernetes")
        logger.error("3. Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–º —Å–µ—Ä–≤–µ—Ä–µ")
        logger.error("")
        logger.error("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        logger.error("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: Get-Process python")
        logger.error("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Docker: docker ps | grep telegram")
        logger.error("- –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        logger.error("=" * 60)
        sys.exit(1)


if __name__ == "__main__":
    main()
