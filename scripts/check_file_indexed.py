"""
–ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑ docs
"""
import sys
sys.path.insert(0, '.')

from app.services.search.retrieval import client, COLLECTION

print("=" * 80)
print("üîç –ü–†–û–í–ï–†–ö–ê –ò–ù–î–ï–ö–°–ê–¶–ò–ò –§–ê–ô–õ–ê 10-whatis.md")
print("=" * 80)

# –§–∞–π–ª 10-start\10-whatis.md –¥–æ–ª–∂–µ–Ω –º–∞–ø–∏—Ç—å—Å—è –Ω–∞ URL:
# https://docs-chatcenter.edna.ru/docs/start/whatis
# (—Å drop_numeric_prefix_in_first_level: true)

possible_urls = [
    "https://docs-chatcenter.edna.ru/docs/start/whatis",
    "https://docs-chatcenter.edna.ru/docs/10-start/10-whatis",
    "https://docs-chatcenter.edna.ru/docs/start/10-whatis",
    "https://docs-chatcenter.edna.ru/docs/10-start/whatis",
]

print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã URL:")
print("-" * 80)

found = False

for url in possible_urls:
    print(f"\nüîé –ü—Ä–æ–≤–µ—Ä—è–µ–º: {url}")

    try:
        from qdrant_client.models import Filter, FieldCondition, MatchValue

        results = client.scroll(
            collection_name=COLLECTION,
            scroll_filter=Filter(
                must=[FieldCondition(key="url", match=MatchValue(value=url))]
            ),
            limit=10,
            with_payload=True,
            with_vectors=False
        )

        if results[0]:
            found = True
            print(f"   ‚úÖ –ù–ê–ô–î–ï–ù–û! –ß–∞–Ω–∫–æ–≤: {len(results[0])}")

            for i, point in enumerate(results[0][:2], 1):
                payload = point.payload
                print(f"\n   –ß–∞–Ω–∫ {i}:")
                print(f"   - ID: {point.id}")
                print(f"   - Title: {payload.get('title', 'N/A')}")
                print(f"   - chunk_index: {payload.get('chunk_index', 'N/A')}")
                text_preview = payload.get('text', '')[:200].replace('\n', ' ')
                print(f"   - Text: {text_preview}...")
        else:
            print(f"   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if not found:
    print("\n" + "=" * 80)
    print("‚ùå –§–ê–ô–õ –ù–ï –ü–†–û–ò–ù–î–ï–ö–°–ò–†–û–í–ê–ù")
    print("=" * 80)
    print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("   1. –§–∞–π–ª –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
    print("   2. –ú–∞–ø–ø–∏–Ω–≥ URL –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É")
    print("   3. –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞")
    print("\nüîß –†–µ—à–µ–Ω–∏–µ:")
    print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é Docusaurus —Ñ–∞–π–ª–æ–≤:")
    print("   python -m ingestion.run")
else:
    print("\n" + "=" * 80)
    print("‚úÖ –§–ê–ô–õ –ü–†–û–ò–ù–î–ï–ö–°–ò–†–û–í–ê–ù")
    print("=" * 80)

print()
