"""–ü—Ä–æ–≤–µ—Ä–∫–∞ URL –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ /start/"""
import sys
sys.path.insert(0, '.')

from app.services.search.retrieval import client, COLLECTION
from qdrant_client.models import Filter, FieldCondition, MatchText

# –ò—â–µ–º –≤—Å–µ URL, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å /docs/start/
results = client.scroll(
    collection_name=COLLECTION,
    limit=100,
    with_payload=True,
    with_vectors=False
)

print("=" * 80)
print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö URL –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ /start/")
print("=" * 80)

start_urls = []
all_urls = []

for point in results[0]:
    url = point.payload.get('url', point.payload.get('site_url', ''))
    all_urls.append(url)
    if '/start/' in url:
        start_urls.append({
            'url': url,
            'title': point.payload.get('title', 'N/A')
        })

print(f"\n‚úÖ –í—Å–µ–≥–æ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(all_urls)}")
print(f"üìå –ò–∑ –Ω–∏—Ö –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ /start/: {len(start_urls)}")

if start_urls:
    print("\nüîç URL –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ /start/:")
    for i, item in enumerate(start_urls, 1):
        print(f"   {i}. {item['url']}")
        print(f"      Title: {item['title']}")
else:
    print("\n‚ùå –ù–ï–¢ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö URL –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ /start/")
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é —Å –≤–∫–ª—é—á–µ–Ω–∏–µ–º —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ URL-–∞—Ö –≤–∞—Ä–∏–∞—Ü–∏–∏ "whatis"
print("\nüîé –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö URL (—Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö 'what'):")
what_urls = [u for u in all_urls if 'what' in u.lower()]
if what_urls:
    for url in what_urls[:5]:
        print(f"   - {url}")
else:
    print("   –ù–µ –Ω–∞–π–¥–µ–Ω–æ")

print("\n" + "=" * 80)
