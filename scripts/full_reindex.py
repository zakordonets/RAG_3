#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å sparse –≤–µ–∫—Ç–æ—Ä–∞–º–∏
"""
import os
import sys
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from app.config import CONFIG
from ingestion.pipeline import crawl_and_index

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger.remove()
logger.add(sys.stderr, level="INFO")

def main():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é —Å sparse –≤–µ–∫—Ç–æ—Ä–∞–º–∏"""
    logger.info("üöÄ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å sparse –≤–µ–∫—Ç–æ—Ä–∞–º–∏")
    logger.info("=" * 60)

    logger.info(f"üìã –ö–æ–ª–ª–µ–∫—Ü–∏—è: {CONFIG.qdrant_collection}")
    logger.info(f"üìä Backend: {CONFIG.embeddings_backend}")
    logger.info(f"üìä Sparse –≤–µ–∫—Ç–æ—Ä—ã: {'–≤–∫–ª—é—á–µ–Ω—ã' if CONFIG.use_sparse else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}")
    logger.info(f"üìä –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–æ–≤: {CONFIG.chunk_min_tokens}-{CONFIG.chunk_max_tokens} —Ç–æ–∫–µ–Ω–æ–≤")

    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é
        # incremental=False –æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        # use_cache=True –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–µ—à –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        # reindex_mode="full" –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ

        logger.info("\nüìù –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é...")
        logger.warning("‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è!")

        result = crawl_and_index(
            incremental=False,  # –ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            use_cache=True,     # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            reindex_mode="full" # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è
        )

        logger.success(f"‚úÖ –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

        return True

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: {e}")
        import traceback
        logger.error(traceback.format_exc())
        return False

if __name__ == "__main__":
    main()
